{"version":3,"sources":["assets/marker/pinGreen.svg","assets/marker/pinOrange.svg","assets/marker/pinYellow.svg","assets/marker/pinRed.svg","assets/photo.jpeg","reducers/index.js","actions/index.js","epics/index.js","components/Bar.js","components/LMap.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","model","maskSupplyClicked","howToBuyMaskClicked","maskInformationLists","updateTime","initMaskInformationLists","searchMaskInformationLists","isLoading","drugstoreId","Reducer","state","action","type","res","maskInformationIsLoading","combineEpics","action$","ofType","pipe","mergeMap","callback","merge","of","actions","ajax","getJSON","response","features","slice","properties","updated","console","log","Bar","props","useStore","useSelector","useState","Card","Content","Header","Description","Label","circular","color","Tab","panes","menuItem","render","Pane","pinGreen","L","Icon","iconUrl","greenSvg","iconSize","iconAnchor","popupAnchor","pinOrange","oSvg","pinYellow","ySvg","pinRed","rSvg","LMap","dispatch","useDispatch","position","setPosition","zoom","getColor","num","useEffect","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","setGeo","Map","center","maxZoom","Dimmer","active","Loader","size","TileLayer","attribution","url","Marker","Popup","map","data","index","key","id","icon","mask_adult","geometry","coordinates","name","Statistic","Group","Value","mask_child","address","phone","note","Table","basic","celled","collapsing","Row","HeaderCell","Body","Cell","textAlign","available","includes","Button","primary","target","href","addMaker","store","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","Epic","configureStore","App","Grid","container","Column","width","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15233c06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pinGreen.e25d46a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinOrange.75475609.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinYellow.f66cb357.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinRed.35669a2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo.71b81da0.jpeg\";","const model = {\n    maskSupplyClicked: true,\n    howToBuyMaskClicked: false,\n    maskInformationLists: [],\n    updateTime: '',\n    initMaskInformationLists: [],\n    searchMaskInformationLists: [],\n    isLoading: false,\n    drugstoreId: '',\n};\n\nconst Reducer = (state = model, action) => {\n    switch (action.type) {\n        case 'RECIEVE_MASK_INFORMATION':\n            return {\n                ...state,\n                maskInformationLists: action.res,\n                updateTime: action.updateTime,\n                isLoading: false,\n            }\n\n        case 'MASK_INFORMATION_IS_LOADING':\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        case 'RECIEVE_SEARCH_MASK_INFORMATION':\n            return {\n                ...state,\n                searchMaskInformationLists: action.res,\n                updateTime: action.updateTime,\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;","//發送 口罩資訊request\nexport const fetchMaskInformation = (callback) => {\n    return {\n        type: 'FETCH_MASK_INFORMATION',\n        callback\n    };\n}\n\n//接收口罩資訊\nexport const recieveMaskInformation = (res, updateTime) => {\n    return {\n        type: 'RECIEVE_MASK_INFORMATION',\n        res: res,\n        updateTime: updateTime,\n    };\n}\n\nexport const maskInformationIsLoading = (isLoading) => {\n    return {\n        type: 'MASK_INFORMATION_IS_LOADING',\n        isLoading: isLoading,\n    }\n}\n\n\nexport const clearSearchMaskInformationLists = () => {\n    return {\n        type: 'CLEAR_SEARCH_MASK_INFORMATION_LISTS',\n    }\n}\n\nexport const recieveSearchMaskInformation = (res, updateTime) => {\n    return {\n        type: 'RECIEVE_SEARCH_MASK_INFORMATION',\n        res: res,\n        updateTime: updateTime,\n    }\n}","import { of, merge } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\n// 引入combineEpics方法\nimport { combineEpics } from 'redux-observable';\n// catchError\nimport { mergeMap } from 'rxjs/operators';\n\nimport * as actions from '../actions';\n\nconst maskGetList = (action$) => \n    action$.ofType('FETCH_MASK_INFORMATION').pipe(\n    mergeMap(({callback}) => { \n        return merge(\n            of(\n                actions.maskInformationIsLoading(true),\n            ),\n            ajax.getJSON(`https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json`).pipe(\n                mergeMap(response => {\n                    if(callback) callback(response.features);\n                    const initmaskInformationLists = response.features.slice(0,20);\n                    // console.log(initmaskInformationLists)\n                    const updateTime = response.features[0].properties.updated;\n                    console.log('updateTime:', updateTime);\n                    return of(\n                        actions.recieveMaskInformation(response.features, updateTime),\n                        actions.maskInformationIsLoading(false),\n                    );\n                })\n            )\n        )\n    })\n  );\n\n// combineEpics會將參數中的epic函數合併在一起\nexport default combineEpics(\n    maskGetList\n);","import React, { useState, useEffect } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Tab, Grid, Statistic, Button, Label, Table, Dropdown, Card, Form } from 'semantic-ui-react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport areaDatas from '../area'\nimport photo from '../assets/photo.jpeg';\nimport { useStore,useSelector } from 'react-redux'\n\nfunction Bar(props) {\n  const store = useStore()\n  let updateTime = useSelector(state => state.updateTime)\n  const [datas, setDatas] = useState([]);\n  const [position, setPosition] = useState([\n    23.5,\n    122\n  ]);\n  const [activeItem, setActiveItem] = useState(\"tab1\");\n  const [city, setCity] = useState(\"\");\n  const [area, setArea] = useState([]);\n\n  function handleItemClick(e, { name }) { setActiveItem(name) }\n\n  function filterData(datas) {\n    // if (datas.features != null) {\n    //   let returnDatas = datas.features.map(data => {\n    //     return { id: data.properties.id, name: data.properties.name, phone: data.properties.phone, \n    //       address: data.properties.address, mask_adult: data.properties.mask_adult,mask_child:data.properties.mask_child,\n    //       updated:data.properties.updated,available:data.properties.available,note:data.properties.note,\n\n    //     };\n    //   })\n    // }\n    return datas;\n  }\n\n  function onChangeCity(event, { name, value }) {\n    setArea(value);\n  }\n\n\n\n  function setGeo(position) {\n    console.log(position);\n    setPosition([position.coords.latitude\n      , position.coords.longitude\n    ]);\n  }\n\n  return (\n    <div >\n\n      <h2> 口罩地圖</h2>\n      <label>更新時間:{updateTime}</label>\n      <Card>\n        <Card.Content>\n          <Card.Header>\n            成人口罩數量顏色\n        </Card.Header>\n          <Card.Description>\n            <Label circular color=\"green\" >> 50</Label>\n            <Label circular color=\"yellow\"   >20~49</Label>\n            <Label circular color=\"orange\"  >1~19</Label>\n            <Label circular color=\"red\"  >0</Label>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n      {/* <Card image={photo} /> */}\n\n      {/* <Grid.Column width={6}>\n              <Form>\n                <Form.Field>\n                  <label>縣市</label>\n                  <Dropdown\n                    selection\n                    onChange={onChangeCity}\n                    options={areaDatas.city} />\n                  <label>區</label>\n                  <Dropdown\n                    selection\n                    options={area} />\n                </Form.Field>\n              </Form>\n            </Grid.Column> */}\n      <Tab panes={panes} />\n    </div >\n  );\n}\n\nexport default Bar;\n\nconst resultRenderer = ({ name }) => <Label content={name} />\n\nresultRenderer.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n}\n\nconst panes = [\n  // {\n  //   menuItem: '搜尋', render: () => <Tab.Pane>\n  //     {/* <Grid.Column width={6}>\n  //     <Search\n  //       loading={isLoading}\n  //       onResultSelect={handleResultSelect}\n  //       onSearchChange={_.debounce(handleSearchChange, 500, {\n  //         leading: true,\n  //       })}\n  //       results={searchResults}\n  //       value={searchValue}\n  //       resultRenderer={resultRenderer}\n  //       {...this.props}\n  //     />\n  //     </Grid.Column> */}\n  //   </Tab.Pane>\n  // },\n  {\n    menuItem: '相關資訊', render: () => <Tab.Pane>\n      ℹ️ 部分藥局因採發放號碼牌方式，方便民眾購買口罩，系統目前無法顯示已發送號碼牌數量。<br />\n      ℹ️ 口罩數量以藥局實際存量為主，線上查詢之數量僅供參考。<br />\n      ℹ️ 如果藥局的庫存或者備註有誤，可以禮貌提醒藥師確認系統資料：<br />\n      庫存的部份，可請藥師瀏覽「防疫口罩管控系統VPN登錄作業使用者手冊」的第五頁，有說明負數的操作方式。<br />\n      備註的部份，可請藥師一樣連線至 VPN 後進入「看診資料及掛號費」：<br />\n      (1)每日固定看診時段 <br />\n      (2)「固定看診時段備註欄」，可修正藥局販賣口罩起迄時間及相關欲通知民眾事項</Tab.Pane>\n  },\n]\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Map,\n    Popup,\n    TileLayer,\n    Marker\n} from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { Statistic, Button, Table, Loader, Dimmer, Form } from 'semantic-ui-react'\nimport L from 'leaflet';\nimport greenSvg from '../assets/marker/pinGreen.svg'\nimport oSvg from '../assets/marker/pinOrange.svg';\nimport ySvg from '../assets/marker/pinYellow.svg';\nimport rSvg from '../assets/marker/pinRed.svg';\nimport { useSelector, useDispatch, useStore } from 'react-redux'\n\nlet pinGreen = new L.Icon({\n    iconUrl: greenSvg,\n    iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nlet pinOrange = new L.Icon({\n    iconUrl: oSvg,\n    iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nlet pinYellow = new L.Icon({\n    iconUrl: ySvg,\n    iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\nlet pinRed = new L.Icon({\n    iconUrl: rSvg,\n    iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nfunction LMap(props) {\n    const dispatch = useDispatch()\n    const maskInformationLists = useSelector(state => state.maskInformationLists)\n    const isLoading = useSelector(state => state.isLoading);\n\n    const [position, setPosition] = useState([\n        23.5,\n        122\n    ]);\n    const [zoom, setZoom] = useState(15);\n\n    useEffect(() => {\n        dispatch({ type: 'FETCH_MASK_INFORMATION' });\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (position) { setGeo(position) });\n        }\n    }, []);\n\n    function setGeo(position) {\n        console.log(position);\n        setPosition([position.coords.latitude\n            , position.coords.longitude\n        ]);\n    }\n    function addMaker(data) {\n        return (<Marker key={data.properties.id} icon={getColor(data.properties.mask_adult)} position={[data.geometry.coordinates[1], data.geometry.coordinates[0]]}>\n            <Popup>\n                <h2>{data.properties.name}</h2>\n                <Statistic.Group size=\"mini\">\n                    <Statistic color={data.properties.mask_adult == 0 ? \"red\" : \"black\"}>\n                        <Statistic.Value>{data.properties.mask_adult}</Statistic.Value>\n                        <Statistic.Label>成人</Statistic.Label>\n                    </Statistic>\n                    <Statistic color={data.properties.mask_child == 0 ? \"red\" : \"black\"}>\n                        <Statistic.Value>{data.properties.mask_child}</Statistic.Value>\n                        <Statistic.Label>兒童</Statistic.Label>\n                    </Statistic>\n                </Statistic.Group>\n                <br />\n                      地址：{data.properties.address}<br />\n                      電話：{data.properties.phone}<br />\n                      備註：{data.properties.note}<br />\n                      更新時間：{data.properties.updated}<br />\n                      營業時間\n                      <Table basic='very' celled collapsing>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>一</Table.HeaderCell>\n                            <Table.HeaderCell>二</Table.HeaderCell>\n                            <Table.HeaderCell>三</Table.HeaderCell>\n                            <Table.HeaderCell>四</Table.HeaderCell>\n                            <Table.HeaderCell>五</Table.HeaderCell>\n                            <Table.HeaderCell>六</Table.HeaderCell>\n                            <Table.HeaderCell>日</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>上午</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期一上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期二上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期三上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期四上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期五上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期六上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期日上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>下午</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期一下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期二下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期三下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期四下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期五下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期六下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期日下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n                <Button primary target=\"_blank\" href={\"https://www.google.com.tw/maps/search/\" + data.properties.name}>\n                    GO!前往\n                </Button>\n            </Popup>\n        </Marker>)\n    }\n\n    function getColor(num) {\n        if (num === 0) {\n            return pinRed;\n        } else if (num < 20) {\n            return pinOrange;\n        } else if (num < 50) {\n            return pinYellow;\n        } else {\n            return pinGreen\n        }\n    }\n\n    return (\n        <div >\n            <Map center={position} zoom={zoom} maxZoom={20}>\n                <Dimmer active={isLoading}>\n                    <Loader size='large'>載入中</Loader>\n                </Dimmer>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={position}>\n                    <Popup>你的位置</Popup>\n                </Marker>\n                <MarkerClusterGroup>\n                    {maskInformationLists.map((data, index) =>\n                        addMaker(data)\n                    )}\n                </MarkerClusterGroup>\n            </Map>\n\n        </div >\n    );\n}\n\nexport default LMap;\n","import React from 'react';\nimport './App.css';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\nimport Bar from \"./components/Bar\"\nimport LMap from \"./components/LMap\"\nimport { Grid } from 'semantic-ui-react'\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Grid container>\n        <Grid.Row>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <Bar></Bar>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <LMap></LMap>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport Reducer from '../reducers';\nimport Epic from '../epics';\n\nexport default function configureStore() {\n    // createEpicMiddlewarec會將epic函數轉為redux中間件\n    const epicMiddleware = createEpicMiddleware();\n\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    // https://github.com/zalmoxisus/redux-devtools-extension\n    // 將reducer傳入以創建一個store\n    const store = createStore(\n        Reducer,\n        composeEnhancers((applyMiddleware(epicMiddleware))),\n      );\n    console.log(composeEnhancers);\n    epicMiddleware.run(Epic);\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}