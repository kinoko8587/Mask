{"version":3,"sources":["marker/pinGreen.svg","marker/pinOrange.svg","marker/pinYellow.svg","marker/pinRed.svg","marker/photo.jpeg","App.js","serviceWorker.js","index.js"],"names":["module","exports","pinGreen","L","Icon","iconUrl","greenSvg","iconSize","iconAnchor","popupAnchor","pinOrange","oSvg","pinYellow","ySvg","pinRed","rSvg","App","useState","datas","setDatas","position","setPosition","zoom","useEffect","fetch","then","response","json","responseJson","console","log","data","features","catch","error","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","setGeo","Grid","container","Row","Column","width","Card","Content","Header","Description","Label","circular","color","image","photo","Tab","panes","Map","center","maxZoom","TileLayer","attribution","url","Marker","Popup","map","index","key","properties","id","icon","num","mask_adult","geometry","coordinates","name","Statistic","Group","size","Value","mask_child","address","phone","note","updated","Table","basic","celled","collapsing","HeaderCell","Body","Cell","textAlign","available","includes","Button","primary","target","href","menuItem","render","Pane","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8762f51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pinGreen.e25d46a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinOrange.75475609.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinYellow.f66cb357.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinRed.35669a2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo.71b81da0.jpeg\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  Map,\n  Popup,\n  TileLayer,\n  Marker\n} from 'react-leaflet';\nimport 'semantic-ui-css/semantic.min.css'\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { Tab, Grid, Statistic, Button, Label, Table, Dropdown, Card, Form } from 'semantic-ui-react'\nimport L from 'leaflet';\nimport greenSvg from './marker/pinGreen.svg';\nimport oSvg from './marker/pinOrange.svg';\nimport ySvg from './marker/pinYellow.svg';\nimport rSvg from './marker/pinRed.svg';\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport areaDatas from './area'\nimport photo from './marker/photo.jpeg';\n\nlet pinGreen = new L.Icon({\n  iconUrl: greenSvg,\n  iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nlet pinOrange = new L.Icon({\n  iconUrl: oSvg,\n  iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nlet pinYellow = new L.Icon({\n  iconUrl: ySvg,\n  iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\nlet pinRed = new L.Icon({\n  iconUrl: rSvg,\n  iconSize: [48, 48], iconAnchor: [24, 48], popupAnchor: [0, -48]\n})\n\nfunction App() {\n  const [datas, setDatas] = useState([]);\n  const [position, setPosition] = useState([\n    23.5,\n    122\n  ]);\n  const [zoom, setZoom] = useState(15);\n  const [activeItem, setActiveItem] = useState(\"tab1\");\n  const [city, setCity] = useState(\"\");\n  const [area, setArea] = useState([]);\n\n  function handleItemClick(e, { name }) { setActiveItem(name) }\n\n  useEffect(() => {\n    fetch(\"https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json\")\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(responseJson);\n        let data = filterData(responseJson.features);\n        setDatas(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) { setGeo(position) });\n    }\n  }, []);\n  function filterData(datas) {\n    // if (datas.features != null) {\n    //   let returnDatas = datas.features.map(data => {\n    //     return { id: data.properties.id, name: data.properties.name, phone: data.properties.phone, \n    //       address: data.properties.address, mask_adult: data.properties.mask_adult,mask_child:data.properties.mask_child,\n    //       updated:data.properties.updated,available:data.properties.available,note:data.properties.note,\n\n    //     };\n    //   })\n    // }\n    return datas;\n  }\n\n  function onChangeCity(event, { name, value }) {\n    setArea(value);\n  }\n\n\n\n  function setGeo(position) {\n    console.log(position);\n    setPosition([position.coords.latitude\n      , position.coords.longitude\n    ]);\n  }\n\n  function getColor(num) {\n    if (num === 0) {\n      return pinRed;\n    } else if (num < 20) {\n      return pinOrange;\n    } else if (num < 50) {\n      return pinYellow;\n    } else {\n      return pinGreen\n    }\n  }\n\n  return (\n    <div >\n      <Grid container>\n        <Grid.Row>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <label> 口罩地圖</label>\n            <Card>\n              <Card.Content>\n                <Card.Header>\n                  成人口罩數量顏色\n        </Card.Header>\n                <Card.Description>\n                  <Label circular color=\"green\" >> 50</Label>\n                  <Label circular color=\"yellow\"   >20~49</Label>\n                  <Label circular color=\"orange\"  >1~19</Label>\n                  <Label circular color=\"red\"  >0</Label>\n                </Card.Description>\n              </Card.Content>\n            </Card>\n            <Card image={photo} />\n\n            {/* <Grid.Column width={6}>\n              <Form>\n                <Form.Field>\n                  <label>縣市</label>\n                  <Dropdown\n                    selection\n                    onChange={onChangeCity}\n                    options={areaDatas.city} />\n                  <label>區</label>\n                  <Dropdown\n                    selection\n                    options={area} />\n                </Form.Field>\n              </Form>\n            </Grid.Column> */}\n            <Tab panes={panes} />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Map center={position} zoom={zoom} maxZoom={20}>\n              <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n              <Marker position={position}>\n                <Popup>你的位置</Popup>\n              </Marker>\n              <MarkerClusterGroup>\n                {datas.map((data, index) =>\n                  <Marker key={data.properties.id} icon={getColor(data.properties.mask_adult)} position={[data.geometry.coordinates[1], data.geometry.coordinates[0]]}>\n                    <Popup>\n                      <h2>{data.properties.name}</h2>\n                      <Statistic.Group size=\"mini\">\n                        <Statistic color={data.properties.mask_adult == 0 ? \"red\" : \"black\"}>\n                          <Statistic.Value>{data.properties.mask_adult}</Statistic.Value>\n                          <Statistic.Label>成人</Statistic.Label>\n                        </Statistic>\n                        <Statistic color={data.properties.mask_child == 0 ? \"red\" : \"black\"}>\n                          <Statistic.Value>{data.properties.mask_child}</Statistic.Value>\n                          <Statistic.Label>兒童</Statistic.Label>\n                        </Statistic>\n                      </Statistic.Group>\n                      <br />\n                      地址：{data.properties.address}<br />\n                      電話：{data.properties.phone}<br />\n                      備註：{data.properties.note}<br />\n                      更新時間：{data.properties.updated}<br />\n                      營業時間\n                      <Table basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>一</Table.HeaderCell>\n                            <Table.HeaderCell>二</Table.HeaderCell>\n                            <Table.HeaderCell>三</Table.HeaderCell>\n                            <Table.HeaderCell>四</Table.HeaderCell>\n                            <Table.HeaderCell>五</Table.HeaderCell>\n                            <Table.HeaderCell>六</Table.HeaderCell>\n                            <Table.HeaderCell>日</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell>上午</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期一上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期二上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期三上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期四上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期五上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期六上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期日上午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell>下午</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期一下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期二下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期三下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期四下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期五下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期六下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                            <Table.Cell textAlign='center'>{data.properties.available.includes(\"星期日下午看診\") ? \"O\" : \"X\"}</Table.Cell>\n                          </Table.Row>\n                        </Table.Body>\n                      </Table>\n                      <Button primary target=\"_blank\" href={\"https://www.google.com.tw/maps/search/\" + data.properties.name}>\n                        GO!前往\n                </Button>\n                    </Popup>\n                  </Marker>\n                )}\n              </MarkerClusterGroup>\n            </Map>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div >\n  );\n}\n\nexport default App;\n\nconst resultRenderer = ({ name }) => <Label content={name} />\n\nresultRenderer.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n}\n\nconst panes = [\n  // {\n  //   menuItem: '搜尋', render: () => <Tab.Pane>\n  //     {/* <Grid.Column width={6}>\n  //     <Search\n  //       loading={isLoading}\n  //       onResultSelect={handleResultSelect}\n  //       onSearchChange={_.debounce(handleSearchChange, 500, {\n  //         leading: true,\n  //       })}\n  //       results={searchResults}\n  //       value={searchValue}\n  //       resultRenderer={resultRenderer}\n  //       {...this.props}\n  //     />\n  //     </Grid.Column> */}\n  //   </Tab.Pane>\n  // },\n  {\n    menuItem: '相關資訊', render: () => <Tab.Pane>\n      ℹ️ 部分藥局因採發放號碼牌方式，方便民眾購買口罩，系統目前無法顯示已發送號碼牌數量。<br />\n      ℹ️ 口罩數量以藥局實際存量為主，線上查詢之數量僅供參考。<br />\n      ℹ️ 如果藥局的庫存或者備註有誤，可以禮貌提醒藥師確認系統資料：<br />\n      庫存的部份，可請藥師瀏覽「防疫口罩管控系統VPN登錄作業使用者手冊」的第五頁，有說明負數的操作方式。<br />\n      備註的部份，可請藥師一樣連線至 VPN 後進入「看診資料及掛號費」：<br />\n      (1)每日固定看診時段 <br />\n      (2)「固定看診時段備註欄」，可修正藥局販賣口罩起迄時間及相關欲通知民眾事項</Tab.Pane>\n  },\n]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}